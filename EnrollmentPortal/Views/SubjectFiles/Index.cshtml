@using EnrollmentPortal.Helper
@model PaginatedList<EnrollmentPortal.Models.Entities.SubjectFile>

@{
    ViewData["Title"] = "Subject Info";
}

<div>
    <div class="row">
        <h1>Subject Information</h1>
    </div>
    <div class="row">
        <div class="col-8">
            <form class="row" method="get" asp-action="Index">
                <div class="form-group w-50 w-md-75">
                    <input type="text" name="searchString" value="@ViewData["CurrentFilterSubject"]" class="form-control" placeholder="Search subject..." />
                </div>
                <button type="submit" class="btn-width w-md-25 btn btn-primary">Search</button>
            </form>
        </div>
        <div class="col-4">
            <div class="d-flex justify-content-end mb-3">
                <a class="btn btn-primary px-2" asp-action="Create">Add Subject</a>
            </div>
        </div>
    </div>
</div>

<table class="table d-none d-md-table table-shadow">
    <thead>
        <tr>
            <th>
                Code
            </th>
            <th>
                Units
            </th>
            <th>
                Regular Offering
            </th>
            <th>
                Year
            </th>
            <th>
                Category
            </th>
            <th>
                Status
            </th>
            <th>
                Course
            </th>
            <th>
                Action
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.SFSUBJCODE)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SFSUBJUNITS)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SFSUBJREGOFRNG)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SFSUBJSCHLYR)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SFSUBJCATEGORY)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SFSUBJSTATUS)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Course.Code)
                </td>
                <td>
                    <a class="btn btn-outline-dark px-2 mx-1" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                    <a class="btn btn-outline-dark px-2 mx-1" asp-action="Details" asp-route-id="@item.Id">Details</a>
                    <a class="btn btn-danger px-2 mx-1" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Card Layout for Mobile -->
<div class="d-md-none">
    @foreach (var item in Model)
    {
        <div class="card card-box-shadow mb-3">
            <div class="card-body">
                <h5 class="card-title">Subject Code: @Html.DisplayFor(modelItem => item.SFSUBJCODE)</h5>
                <p class="card-text">
                    <strong>Units:</strong> @Html.DisplayFor(modelItem => item.SFSUBJUNITS) <br>
                    <strong>Regular Offering:</strong> @Html.DisplayFor(modelItem => item.SFSUBJREGOFRNG) <br>
                    <strong>Year:</strong> @Html.DisplayFor(modelItem => item.SFSUBJSCHLYR) <br>
                    <strong>Category:</strong> @Html.DisplayFor(modelItem => item.SFSUBJCATEGORY) <br>
                    <strong>Status:</strong> @Html.DisplayFor(modelItem => item.SFSUBJSTATUS) <br>
                    <strong>Course:</strong> @Html.DisplayFor(modelItem => item.Course.Code)
                </p>
                <div>
                    <a class="btn btn-outline-dark px-2 mx-1" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                    <a class="btn btn-outline-dark px-2 mx-1" asp-action="Details" asp-route-id="@item.Id">Details</a>
                    <a class="btn btn-danger px-2 mx-1" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </div>
            </div>
        </div>
    }
</div>

<!-- Pagination Controls -->
<nav class="d-flex justify-content-end">
    <ul class="pagination">
        @if (Model.HasPreviousPage)
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.PageIndex - 1)">Previous</a>
            </li>
        }
        else
        {
            <li class="page-item disabled">
                <span class="page-link">Previous</span>
            </li>
        }

        @for (var i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                <a class="page-link" asp-action="Index" asp-route-pageNumber="@i">@i</a>
            </li>
        }

        @if (Model.HasNextPage)
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.PageIndex + 1)">Next</a>
            </li>
        }
        else
        {
            <li class="page-item disabled">
                <span class="page-link">Next</span>
            </li>
        }

    </ul>
</nav>
