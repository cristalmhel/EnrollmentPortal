// <auto-generated />
using System;
using EnrollmentPortal.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EnrollmentPortal.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241104055546_add status course")]
    partial class addstatuscourse
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EnrollmentPortal.Models.Entities.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("EnrollmentPortal.Models.Entities.EnrollmentDetailFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ENRDFSTUDSTATUS")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("EnrollmentHeaderFileId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectFileId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectSchedFileId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EnrollmentHeaderFileId");

                    b.HasIndex("SubjectFileId");

                    b.HasIndex("SubjectSchedFileId");

                    b.ToTable("EnrollmentDetailFiles");
                });

            modelBuilder.Entity("EnrollmentPortal.Models.Entities.EnrollmentHeaderFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ENRHFSTUDDATEENROLL")
                        .HasColumnType("datetime2");

                    b.Property<string>("ENRHFSTUDENCODER")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ENRHFSTUDSCHLYR")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ENRHFSTUDSEM")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ENRHFSTUDSTATUS")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<double>("ENRHFSTUDTOTALUNITS")
                        .HasColumnType("float");

                    b.Property<long>("StudentFileId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("StudentFileId");

                    b.ToTable("EnrollmentHeaderFiles");
                });

            modelBuilder.Entity("EnrollmentPortal.Models.Entities.StudentFile", b =>
                {
                    b.Property<long>("StudId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("StudId"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("STFSTUDFNAME")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("STFSTUDLNAME")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("STFSTUDMNAME")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("STFSTUDREMARKS")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("STFSTUDSTATUS")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("STFSTUDYEAR")
                        .HasColumnType("int");

                    b.HasKey("StudId");

                    b.HasIndex("CourseId");

                    b.ToTable("StudentFiles");
                });

            modelBuilder.Entity("EnrollmentPortal.Models.Entities.SubjectFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("SFSUBJCATEGORY")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SFSUBJCODE")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SFSUBJCURRCODE")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SFSUBJDESC")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SFSUBJREGOFRNG")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SFSUBJSCHLYR")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("SFSUBJSTATUS")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("SFSUBJUNITS")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("SubjectFiles");
                });

            modelBuilder.Entity("EnrollmentPortal.Models.Entities.SubjectPreqFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PrerequisiteSubjectId")
                        .HasColumnType("int");

                    b.Property<string>("SUBJCATEGORY")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SubjectFileId")
                        .HasColumnType("int");

                    b.Property<int?>("SubjectFileId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PrerequisiteSubjectId");

                    b.HasIndex("SubjectFileId");

                    b.HasIndex("SubjectFileId1");

                    b.ToTable("SubjectPreqFiles");
                });

            modelBuilder.Entity("EnrollmentPortal.Models.Entities.SubjectSchedFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("SSFCLASSSIZE")
                        .HasColumnType("int");

                    b.Property<string>("SSFDAYS")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SSFEDPCODE")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("SSFENDTIME")
                        .HasColumnType("datetime2");

                    b.Property<int>("SSFMAXSIZE")
                        .HasColumnType("int");

                    b.Property<string>("SSFROOM")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("SSFSCHOOLYEAR")
                        .HasColumnType("int");

                    b.Property<string>("SSFSECTION")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SSFSSEM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SSFSTARTTIME")
                        .HasColumnType("datetime2");

                    b.Property<string>("SSFSTATUS")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("SSFXM")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<int>("SubjectFileId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubjectFileId");

                    b.ToTable("SubjectSchedFiles");
                });

            modelBuilder.Entity("EnrollmentPortal.Models.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleInitial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EnrollmentPortal.Models.Entities.EnrollmentDetailFile", b =>
                {
                    b.HasOne("EnrollmentPortal.Models.Entities.EnrollmentHeaderFile", "EnrollmentHeaderFile")
                        .WithMany("EnrollmentDetailFiles")
                        .HasForeignKey("EnrollmentHeaderFileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EnrollmentPortal.Models.Entities.SubjectFile", "SubjectFile")
                        .WithMany("EnrollmentDetailFiles")
                        .HasForeignKey("SubjectFileId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EnrollmentPortal.Models.Entities.SubjectSchedFile", "SubjectSchedFile")
                        .WithMany("EnrollmentDetailFiles")
                        .HasForeignKey("SubjectSchedFileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EnrollmentHeaderFile");

                    b.Navigation("SubjectFile");

                    b.Navigation("SubjectSchedFile");
                });

            modelBuilder.Entity("EnrollmentPortal.Models.Entities.EnrollmentHeaderFile", b =>
                {
                    b.HasOne("EnrollmentPortal.Models.Entities.StudentFile", "StudentFile")
                        .WithMany("EnrollmentHeaderFiles")
                        .HasForeignKey("StudentFileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StudentFile");
                });

            modelBuilder.Entity("EnrollmentPortal.Models.Entities.StudentFile", b =>
                {
                    b.HasOne("EnrollmentPortal.Models.Entities.Course", "Course")
                        .WithMany("StudentFiles")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("EnrollmentPortal.Models.Entities.SubjectFile", b =>
                {
                    b.HasOne("EnrollmentPortal.Models.Entities.Course", "Course")
                        .WithMany("SubjectFiles")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("EnrollmentPortal.Models.Entities.SubjectPreqFile", b =>
                {
                    b.HasOne("EnrollmentPortal.Models.Entities.SubjectFile", "PrerequisiteSubject")
                        .WithMany()
                        .HasForeignKey("PrerequisiteSubjectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EnrollmentPortal.Models.Entities.SubjectFile", "SubjectFile")
                        .WithMany()
                        .HasForeignKey("SubjectFileId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EnrollmentPortal.Models.Entities.SubjectFile", null)
                        .WithMany("SubjectPreqFile")
                        .HasForeignKey("SubjectFileId1");

                    b.Navigation("PrerequisiteSubject");

                    b.Navigation("SubjectFile");
                });

            modelBuilder.Entity("EnrollmentPortal.Models.Entities.SubjectSchedFile", b =>
                {
                    b.HasOne("EnrollmentPortal.Models.Entities.SubjectFile", "SubjectFile")
                        .WithMany("SubjectSchedFile")
                        .HasForeignKey("SubjectFileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubjectFile");
                });

            modelBuilder.Entity("EnrollmentPortal.Models.Entities.Course", b =>
                {
                    b.Navigation("StudentFiles");

                    b.Navigation("SubjectFiles");
                });

            modelBuilder.Entity("EnrollmentPortal.Models.Entities.EnrollmentHeaderFile", b =>
                {
                    b.Navigation("EnrollmentDetailFiles");
                });

            modelBuilder.Entity("EnrollmentPortal.Models.Entities.StudentFile", b =>
                {
                    b.Navigation("EnrollmentHeaderFiles");
                });

            modelBuilder.Entity("EnrollmentPortal.Models.Entities.SubjectFile", b =>
                {
                    b.Navigation("EnrollmentDetailFiles");

                    b.Navigation("SubjectPreqFile");

                    b.Navigation("SubjectSchedFile");
                });

            modelBuilder.Entity("EnrollmentPortal.Models.Entities.SubjectSchedFile", b =>
                {
                    b.Navigation("EnrollmentDetailFiles");
                });
#pragma warning restore 612, 618
        }
    }
}
